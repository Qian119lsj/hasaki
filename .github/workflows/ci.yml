# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Windows Build for hasaki

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]
env:
  QT_VERSION: '6.8.3'
  QT_HOST: windows
  BUILD_TYPE: Release

jobs:
  build:
    permissions:
      contents: write
      
    runs-on: windows-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ env.QT_VERSION }}
        arch: win64_msvc2022_64
        cache: true
        cache-key-prefix: 'install-qt-action'
        
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgTriplet: 'x64-linux'
        
    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@v4
      
    - name: Configure CMake
      shell: bash
      run: |
        $env:VCPKG_ROOT_ = "${{ github.workspace }}/vcpkg"
        cmake --preset msvc-release

    - name: Build
      run: |
        $env:VCPKG_ROOT_ = "${{ github.workspace }}/vcpkg"
        cmake --build --preset build-msvc-release
      
    - name: Install
      run: |
        $env:VCPKG_ROOT_ = "${{ github.workspace }}/vcpkg"
        cmake --install out/build/msvc-release

    - name: Archive release files
      shell: pwsh
      run: |
        $assetName = "hasaki-${{ github.ref_name }}-windows.zip"
        $assetPath = "out/install/msvc-release/bin"
        7z a $assetName $assetPath/*
        echo "ASSET_NAME=$assetName" >> $env:GITHUB_ENV

    - name: Create GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ github.event.release.body }}
        files: ${{ env.ASSET_NAME }}
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: hasaki-windows-build-raw
        path: build/${{env.BUILD_TYPE}}/
