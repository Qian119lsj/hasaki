# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Windows Build for hasaki

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]
env:
  QT_VERSION: '6.5.3'
  QT_HOST: windows
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        arch: win64_msvc2019_64
        cache: true
        
    - name: Configure CMake
      shell: bash
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}}
      
    - name: Deploy Qt Dependencies
      run: windeployqt --release build/${{env.BUILD_TYPE}}/hasaki.exe

    - name: Archive release files
      run: |
        $ASSET_NAME="hasaki-${{ github.ref_name }}-windows.zip"
        $ASSET_PATH="build/${{env.BUILD_TYPE}}"
        7z a $ASSET_NAME $ASSET_PATH/*

    - name: Create GitHub Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ github.event.release.body }}
        files: hasaki-${{ github.ref_name }}-windows.zip
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: hasaki-windows-build-raw
        path: build/${{env.BUILD_TYPE}}/
